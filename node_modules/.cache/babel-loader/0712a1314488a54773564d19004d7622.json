{"ast":null,"code":"var store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 17\n      }, {\n        id: 2,\n        message: 'Aliluya',\n        likesCount: 11\n      }, {\n        id: 3,\n        message: 'Lalala',\n        likesCount: 4\n      }],\n      newPostText: \"\"\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How is your'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }, {\n        id: 4,\n        message: 'what yo did'\n      }, {\n        id: 5,\n        message: 'Yo yo'\n      }, {\n        id: 6,\n        message: 'he bro'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Dimych'\n      }, {\n        id: 2,\n        name: 'Andrew'\n      }, {\n        id: 3,\n        name: 'Sveta'\n      }, {\n        id: 4,\n        name: 'Sasha'\n      }, {\n        id: 5,\n        name: 'Viktor'\n      }, {\n        id: 6,\n        name: 'Valera'\n      }]\n    }\n  },\n  rerenderEntireTree: function rerenderEntireTree() {\n    console.log(\"State chabge\");\n  },\n  addPost: function addPost() {\n    var newPost = {\n      id: 5,\n      message: state.profilePage.newPostText,\n      likesCount: 0\n    };\n    state.profilePage.posts.push(newPost);\n    state.profilePage.newPostText = \"\";\n    rerenderEntireTree(state);\n  },\n  updateNewPostText: function updateNewPostText(newText) {\n    state.profilePage.newPostText = newText;\n    rerenderEntireTree(state);\n  },\n  subscribe: function subscribe(observer) {\n    rerenderEntireTree = observer;\n  }\n};\nwindow.state = state;\nexport default state;","map":{"version":3,"sources":["/home/user/react-way-of-samurai/src/redux/state.js"],"names":["store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","messages","dialogs","name","rerenderEntireTree","console","log","addPost","newPost","state","push","updateNewPostText","newText","subscribe","observer","window"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AAEJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,KAAK,EAAE,CACH;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE,kBAAjB;AAAqCC,QAAAA,UAAU,EAAE;AAAjD,OADG,EAEH;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE,SAAjB;AAA4BC,QAAAA,UAAU,EAAE;AAAxC,OAFG,EAGH;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE,QAAjB;AAA2BC,QAAAA,UAAU,EAAE;AAAvC,OAHG,CADE;AAMTC,MAAAA,WAAW,EAAE;AANJ,KAFT;AAYJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,QAAQ,EAAE,CACN;AAACL,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OADM,EAEN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OAFM,EAGN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OAHM,EAIN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OAJM,EAKN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OALM,EAMN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OANM,CADD;AASTK,MAAAA,OAAO,EAAE,CACL;AAACN,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OADK,EAEL;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OAFK,EAGL;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OAHK,EAIL;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OAJK,EAKL;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OALK,EAML;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OANK;AATA;AAZT,GADA;AAmCRC,EAAAA,kBAnCQ,gCAmCa;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GArCO;AAuCRC,EAAAA,OAvCQ,qBAuCI;AACR,QAAIC,OAAO,GAAG;AAEVZ,MAAAA,EAAE,EAAE,CAFM;AAGVC,MAAAA,OAAO,EAAEY,KAAK,CAACf,WAAN,CAAkBK,WAHjB;AAIVD,MAAAA,UAAU,EAAE;AAJF,KAAd;AAOAW,IAAAA,KAAK,CAACf,WAAN,CAAkBC,KAAlB,CAAwBe,IAAxB,CAA6BF,OAA7B;AACAC,IAAAA,KAAK,CAACf,WAAN,CAAkBK,WAAlB,GAAgC,EAAhC;AACAK,IAAAA,kBAAkB,CAACK,KAAD,CAAlB;AACH,GAlDO;AAoDRE,EAAAA,iBApDQ,6BAoDYC,OApDZ,EAoDqB;AAEzBH,IAAAA,KAAK,CAACf,WAAN,CAAkBK,WAAlB,GAAgCa,OAAhC;AACAR,IAAAA,kBAAkB,CAACK,KAAD,CAAlB;AACH,GAxDO;AA0DRI,EAAAA,SA1DQ,qBA0DIC,QA1DJ,EA0Dc;AAClBV,IAAAA,kBAAkB,GAAGU,QAArB;AACH;AA5DO,CAAZ;AAiEAC,MAAM,CAACN,KAAP,GAAeA,KAAf;AAEA,eAAeA,KAAf","sourcesContent":["let store = {\n    _state: {\n\n        profilePage: {\n            posts: [\n                {id: 1, message: 'Hi, how are you?', likesCount: 17},\n                {id: 2, message: 'Aliluya', likesCount: 11},\n                {id: 3, message: 'Lalala', likesCount: 4}\n            ],\n            newPostText: \"\"\n        },\n\n\n        dialogsPage: {\n            messages: [\n                {id: 1, message: 'Hi'},\n                {id: 2, message: 'How is your'},\n                {id: 3, message: 'Yo'},\n                {id: 4, message: 'what yo did'},\n                {id: 5, message: 'Yo yo'},\n                {id: 6, message: 'he bro'}\n            ],\n            dialogs: [\n                {id: 1, name: 'Dimych'},\n                {id: 2, name: 'Andrew'},\n                {id: 3, name: 'Sveta'},\n                {id: 4, name: 'Sasha'},\n                {id: 5, name: 'Viktor'},\n                {id: 6, name: 'Valera'}\n\n\n            ]\n        }\n    },\n\n    rerenderEntireTree() {\n        console.log(\"State chabge\")\n    },\n\n    addPost ()  {\n        let newPost = {\n\n            id: 5,\n            message: state.profilePage.newPostText,\n            likesCount: 0\n        };\n\n        state.profilePage.posts.push(newPost);\n        state.profilePage.newPostText = \"\";\n        rerenderEntireTree(state);\n    },\n\n    updateNewPostText  (newText) {\n\n        state.profilePage.newPostText = newText;\n        rerenderEntireTree(state);\n    },\n\n    subscribe  (observer) {\n        rerenderEntireTree = observer;\n    }\n\n\n}\n\nwindow.state = state;\n\nexport default state;"]},"metadata":{},"sourceType":"module"}