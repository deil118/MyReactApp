{"ast":null,"code":"var ADD_POST = 'ADD-POST';\nvar UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nvar UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nvar SEND_MESSAGE = 'SEND_MESSAGE';\nvar store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 17\n      }, {\n        id: 2,\n        message: 'Aliluya',\n        likesCount: 11\n      }],\n      newPostText: \"\"\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How is your'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }, {\n        id: 4,\n        message: 'what yo did'\n      }, {\n        id: 5,\n        message: 'Yo yo'\n      }, {\n        id: 6,\n        message: 'he bro'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Dimych'\n      }, {\n        id: 2,\n        name: 'Andrew'\n      }, {\n        id: 3,\n        name: 'Sveta'\n      }, {\n        id: 4,\n        name: 'Sasha'\n      }, {\n        id: 5,\n        name: 'Viktor'\n      }, {\n        id: 6,\n        name: 'Valera'\n      }],\n      newMessageBody: \"\"\n    }\n  },\n  _callSubscriber: function _callSubscriber() {\n    console.log(\"State chabge\");\n  },\n  getState: function getState() {\n    return this._state;\n  },\n  subscribe: function subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n  dispatch: function dispatch(action) {\n    //(какое действие совершить, что именно сдлеать. )\n    if (action.type === ADD_POST) {\n      var newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = \"\";\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogsPage.newMessageBody = action.body;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      var body = this._state.dialogsPage.newMessageBody;\n      this._state.dialogsPage.newMessageBody = '';\n\n      this._state.dialogsPage.messages.push();\n\n      this._callSubscriber(this._state);\n    }\n  }\n};\nexport var addPostActionCreator = function addPostActionCreator() {\n  return {\n    type: ADD_POST\n  };\n};\nexport var updateNewPostTextActionCreator = function updateNewPostTextActionCreator(text) {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/home/user/react-way-of-samurai/src/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","messages","dialogs","name","newMessageBody","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","body","addPostActionCreator","updateNewPostTextActionCreator","text","window"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet store = {\n    _state: {\n\n        profilePage: {\n            posts: [\n                {id: 1, message: 'Hi, how are you?', likesCount: 17},\n                {id: 2, message: 'Aliluya', likesCount: 11}\n            ],\n            newPostText: \"\"\n        },\n\n\n        dialogsPage: {\n            messages: [\n                {id: 1, message: 'Hi'},\n                {id: 2, message: 'How is your'},\n                {id: 3, message: 'Yo'},\n                {id: 4, message: 'what yo did'},\n                {id: 5, message: 'Yo yo'},\n                {id: 6, message: 'he bro'}\n            ],\n            dialogs: [\n                {id: 1, name: 'Dimych'},\n                {id: 2, name: 'Andrew'},\n                {id: 3, name: 'Sveta'},\n                {id: 4, name: 'Sasha'},\n                {id: 5, name: 'Viktor'},\n                {id: 6, name: 'Valera'}\n\n\n            ],\n\n            newMessageBody: \"\"\n        }\n    },\n    _callSubscriber() {\n        console.log(\"State chabge\")\n    },\n\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n\n    dispatch(action) {   //(какое действие совершить, что именно сдлеать. )\n\n        if (action.type === ADD_POST) {\n            let newPost = {\n\n                id: 5,\n                message: this._state.profilePage.newPostText,\n                likesCount: 0\n            };\n            this._state.profilePage.posts.push(newPost);\n            this._state.profilePage.newPostText = \"\";\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n\n        }else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n    this._state.dialogsPage.newMessageBody = action.body;\n    this._callSubscriber(this._state);\n\n        }else if (action.type === SEND_MESSAGE) {\n            let body = this._state.dialogsPage.newMessageBody;\n            this._state.dialogsPage.newMessageBody = '';\n            this._state.dialogsPage.messages.push()\n            this._callSubscriber(this._state);\n        }\n    }\n\n}\n\nexport const addPostActionCreator = () => ({type: ADD_POST});\n\n\nexport const updateNewPostTextActionCreator = (text) =>\n    ({type: UPDATE_NEW_POST_TEXT, newText: text});\n\nexport default store;\n\nwindow.store = store;"]},"metadata":{},"sourceType":"module"}